{"version":3,"sources":["Components/LoginForm/LoginForm.module.scss","Pages/UserPage/UserPage.module.scss","Components/Input/Input.module.scss","Components/Button/Button.module.scss","Components/Error/Error.module.scss","Components/Preloader/Preloader.module.css","App/App.module.scss","Pages/LoginPage/LoginPage.module.scss","reportWebVitals.ts","Pages/UserPage/selectors.ts","redux/app-reducer.ts","API/api.ts","API/auth-api.ts","redux/auth-reducer.ts","Components/Input/Input.tsx","Components/Button/Button.tsx","Components/LoginForm/LoginForm.tsx","Components/Error/Error.tsx","Components/Preloader/Preloader.tsx","Pages/LoginPage/LoginPage.tsx","Pages/UserPage/UserPage.tsx","App/App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectorUserData","state","authState","user","selectorIsLogged","isLoggedIn","selectorRequestStatus","appState","status","selectorAppError","error","initializeState","setAppStatus","type","setAppError","axiosInstance","axios","create","withCredentials","baseURL","headers","Accept","interceptorsConfig","config","token","localStorage","getItem","Boolean","Authorization","interceptors","request","use","authAPI","clientId","email","password","post","res","get","setIsLoggedIn","value","getAuthUserData","dispatch","a","data","message","Input","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalInputClassName","s","superInput","finalSpanClassName","spanError","input_wrapper","e","currentTarget","key","Button","React","memo","red","finalClassName","default","validate","values","errors","toString","length","test","LoginForm","callback","formik","useFormik","initialValues","onSubmit","setSubmitting","renderInput","id","name","placeholder","form_wrapper","headline","headline_text","form","form_description","handleSubmit","input","handleChange","form_btn_wrapper","form_btn","Error","error_wrapper","Preloader","preloader_wrapper","loader","LoginPage","useSelector","useDispatch","sentLoginData","useCallback","setItem","accessToken","refreshToken","login","to","PATH","USER","wrapper","UserPage","logoutHandler","removeItem","useEffect","user_block","user_info","info","logout_btn_wrapper","onClick","logout_btn","LOGIN","App","app","content","path","exact","render","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3876986a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrapper\":\"LoginForm_form_wrapper__pGOfB\",\"headline\":\"LoginForm_headline__2h6zG\",\"headline_text\":\"LoginForm_headline_text__3P2SJ\",\"form\":\"LoginForm_form__1fO7N\",\"form_description\":\"LoginForm_form_description__3_J1H\",\"input\":\"LoginForm_input__1Q8lM\",\"form_btn_wrapper\":\"LoginForm_form_btn_wrapper__3dYj1\",\"form_btn\":\"LoginForm_form_btn__2dWXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserPage_wrapper__2w2tX\",\"user_block\":\"UserPage_user_block__FDzPM\",\"user_info\":\"UserPage_user_info__2Y9hX\",\"info\":\"UserPage_info__1cwiM\",\"logout_btn_wrapper\":\"UserPage_logout_btn_wrapper__2HSmw\",\"logout_btn\":\"UserPage_logout_btn__1R2hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_wrapper\":\"Input_input_wrapper__3SILz\",\"superInput\":\"Input_superInput__1e-HN\",\"spanError\":\"Input_spanError__2iBy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__1hRgZ\",\"red\":\"Button_red__3s2rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_wrapper\":\"Error_error_wrapper__2sxLv\",\"error\":\"Error_error__3M_SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"Preloader_preloader_wrapper__2pGBo\",\"loader\":\"Preloader_loader__uQ0yN\",\"load1\":\"Preloader_load1__1nb2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__218_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginPage_wrapper__1qGss\",\"headline\":\"LoginPage_headline__2cWzL\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AppStateType} from '../../redux/store';\r\n\r\nexport const selectorUserData= (state: AppStateType) => state.authState.user\r\nexport const selectorIsLogged = (state: AppStateType) => state.authState.isLoggedIn\r\nexport const selectorRequestStatus= (state: AppStateType) => state.appState.status\r\nexport const selectorAppError= (state: AppStateType) => state.appState.error\r\n","type ActionsType = ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppStatus>\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nlet initializeState = {\r\n    status: 'idle',\r\n    error: null,\r\n} as InitialStateType\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initializeState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SP/APP/SET_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'SP/APP/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAppStatus = (status: RequestStatusType) => ({type: 'SP/APP/SET_STATUS', status} as const)\r\nexport const setAppError = (error: string | null) => ({type: 'SP/APP/SET_ERROR', error} as const)\r\n","import axios from 'axios'\r\n\r\nconst defaultOptions = {\r\n    withCredentials: false,\r\n    baseURL: 'https://tager.dev.ozitag.com',\r\n    headers: {\r\n        Accept: 'application/json',\r\n    }\r\n};\r\n\r\nexport const axiosInstance = axios.create(defaultOptions);\r\n\r\nconst interceptorConfigCreator = () => (config: any) => {\r\n    const token = localStorage.getItem('accessToken')\r\n    if (Boolean(token)) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n    } else {\r\n        delete config.headers.Authorization\r\n    }\r\n    return config\r\n}\r\n\r\nconst interceptorsConfig = interceptorConfigCreator()\r\naxiosInstance.interceptors.request.use(interceptorsConfig)\r\n","import {axiosInstance} from './api';\r\nimport {AxiosResponse} from 'axios';\r\nimport {UserType} from '../redux/auth-reducer';\r\n\r\ntype LoginResponseType = {\r\n    tokenType: string,\r\n    expiresAt: string,\r\n    accessToken: string,\r\n    refreshToken: string\r\n}\r\n\r\nexport const authAPI = {\r\n    login(clientId: number, email: string, password: string) {\r\n        return axiosInstance.post<AxiosResponse<LoginResponseType>>(`/api/auth/user`, {clientId, email, password})\r\n            .then(res => res)\r\n    },\r\n    logout() {\r\n        return axiosInstance.post<{ success: boolean }>(`/api/tager/user/profile/logout`)\r\n            .then(res => res)\r\n    },\r\n    getUser() {\r\n        return axiosInstance.get<AxiosResponse<UserType>>(`/api/tager/user/profile`)\r\n            .then(res => res)\r\n    },\r\n}\r\n","import {ThunkDispatch} from 'redux-thunk';\r\nimport {setAppError, setAppStatus} from './app-reducer';\r\nimport {authAPI} from '../API/auth-api';\r\nimport {AppStateType} from './store';\r\n\r\nexport type UserType = {\r\n    name: string,\r\n    email: string,\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setAppError>\r\n\r\nlet initializeState = {\r\n    isLoggedIn: false,\r\n    user: {} as UserType\r\n};\r\n\r\nexport type InitialStateType = typeof initializeState\r\nexport const authReducer = (state: InitialStateType = initializeState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SP/AUTH/SET_IS_LOGGED':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'SP/AUTH/SET_USER_DATA':\r\n            return {...state, user: action.user}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setIsLoggedIn = (value: boolean) => ({type: 'SP/AUTH/SET_IS_LOGGED', value} as const)\r\nexport const setUserData = (user: UserType) => ({type: 'SP/AUTH/SET_USER_DATA', user} as const)\r\n\r\nexport const getAuthUserData = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        const res = await authAPI.getUser()\r\n        dispatch(setUserData(res.data.data));\r\n        dispatch(setIsLoggedIn(true));\r\n        dispatch(setAppStatus('succeeded'));\r\n    } catch (e) {\r\n        dispatch(setAppError(e.message))\r\n        dispatch(setAppStatus('failed'));\r\n    }\r\n};\r\n\r\nexport const login = (clientId: number, email: string, password: string) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n        dispatch(setAppStatus('loading'))\r\n        try {\r\n            const res = await authAPI.login(clientId, email, password)\r\n            localStorage.setItem('accessToken', res.data.data.accessToken);\r\n            localStorage.setItem('refreshToken', res.data.data.refreshToken);\r\n            dispatch(setIsLoggedIn(true));\r\n            dispatch(setAppError(''));\r\n        } catch (e) {\r\n            dispatch(setAppError(e.message))\r\n            dispatch(setAppStatus('failed'));\r\n        }\r\n    };\r\n\r\nexport const logout = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        await authAPI.logout()\r\n        localStorage.removeItem('accessToken')\r\n        localStorage.removeItem('refreshToken')\r\n        dispatch(setAppStatus('succeeded'));\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setAppError(''))\r\n    } catch (e) {\r\n        dispatch(setAppError(e.message))\r\n        dispatch(setAppStatus('failed'));\r\n    }\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './Input.module.scss'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n\r\n        e.key === 'Enter'\r\n        && onEnter\r\n        && onEnter()\r\n    }\r\n\r\n    const finalInputClassName = className ? `${s.superInput} ${className}` : s.superInput\r\n    const finalSpanClassName =  spanClassName? `${s.spanError} ${spanClassName}` : s.spanError\r\n\r\n    return (\r\n\r\n        <div className={s.input_wrapper}>\r\n            <input type={'text'}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={finalInputClassName}\r\n\r\n                   {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './Button.module.scss';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = red ? `${s.red} ${s.default}` : `${className} ${s.default}`;\r\n\r\n    return (\r\n        <button className={finalClassName}\r\n                {...restProps}\r\n        />\r\n    );\r\n})\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {FormikErrors, useFormik} from 'formik';\r\nimport Input from '../Input/Input';\r\nimport {Button} from '../Button/Button';\r\n\r\nimport s from './LoginForm.module.scss'\r\n\r\nexport interface FormValues {\r\n    clientId: number,\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\ninterface OtherProps {\r\n    callback: (value: FormValues) => void\r\n}\r\n\r\nconst validate = (values: FormValues) => {\r\n    let errors: FormikErrors<FormValues> = {};\r\n\r\n    if (!values.clientId) {\r\n        errors.clientId = 'Required';\r\n    } else if (values.clientId.toString().length === 0) {\r\n        errors.clientId = 'Must be 1 characters or more';\r\n    } else if (values.clientId.toString().length > 5) {\r\n        errors.clientId = 'Must be 10 characters or less';\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length < 4) {\r\n        errors.password = 'Must be 4 characters or more';\r\n    } else if (values.password.length > 10) {\r\n        errors.password = 'Must be 10 characters or less';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport const LoginForm: React.FC<OtherProps> = React.memo(({callback}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            clientId: 1,\r\n            email: 'user@ozitag.com',\r\n            password: 'user',\r\n        },\r\n        validate,\r\n        onSubmit: (values, {setSubmitting}) => {\r\n            callback(values)\r\n            setSubmitting(false)\r\n        },\r\n    });\r\n\r\n    const renderInput = (id: string, name: string, type: string, className: string, error: string | undefined, onChange: (e: ChangeEvent) => void, value: number | string, placeholder?: string) => {\r\n        return <Input id={id}\r\n                      name={name}\r\n                      type={type}\r\n                      className={className}\r\n                      error={error}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      placeholder={placeholder}\r\n        />\r\n    }\r\n\r\n    return (\r\n        <div className={s.form_wrapper}>\r\n            <div className={s.headline}>\r\n                <h1 className={s.headline_text}>FLy&TAG</h1>\r\n            </div>\r\n            <div className={s.form}>\r\n                <p className={s.form_description}>Login into your account</p>\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    {renderInput('clientId', 'clientId', 'text', s.input, formik.errors.clientId, formik.handleChange, formik.values.clientId, 'Enter ID')}\r\n\r\n                    {renderInput('email', 'email', 'text', s.input, formik.errors.email, formik.handleChange, formik.values.email, 'Enter Email')}\r\n\r\n                    {renderInput('password', 'password', 'text', s.input, formik.errors.password, formik.handleChange, formik.values.password, 'Enter Password')}\r\n\r\n                    <div className={s.form_btn_wrapper}>\r\n                        <Button type=\"submit\" className={s.form_btn}>Log in</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Error.module.scss'\r\n\r\ntype PropsType = {\r\n    error: string\r\n}\r\n\r\nexport const Error: React.FC<PropsType> = React.memo(({error}) => {\r\n    return (\r\n        <div className={s.error_wrapper}>\r\n            <div className={s.error}>{error ? error : ''}</div>\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.preloader_wrapper}>\r\n            <div className={s.loader}>Loading...</div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {selectorAppError, selectorIsLogged, selectorRequestStatus} from '../UserPage/selectors';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {FormValues, LoginForm} from '../../Components/LoginForm/LoginForm';\r\nimport {Error} from '../../Components/Error/Error';\r\nimport {Preloader} from '../../Components/Preloader/Preloader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../App/App';\r\n\r\nimport s from './LoginPage.module.scss'\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n\r\n    const status = useSelector(selectorRequestStatus)\r\n    const error = useSelector(selectorAppError)\r\n    const isLoggedIn = useSelector(selectorIsLogged)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const sentLoginData = useCallback((value: FormValues) => {\r\n        const {clientId, email, password} = value\r\n        dispatch(login(clientId, email, password))\r\n    }, [])\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.USER}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {status === 'loading'\r\n                ? <Preloader/>\r\n                : <>\r\n                    <LoginForm callback={sentLoginData}/>\r\n                    {error && <Error error={error}/>}\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectorAppError, selectorIsLogged, selectorRequestStatus, selectorUserData} from './selectors';\nimport {Button} from '../../Components/Button/Button';\nimport {Preloader} from '../../Components/Preloader/Preloader';\nimport {Error} from '../../Components/Error/Error';\nimport {getAuthUserData, logout} from '../../redux/auth-reducer';\nimport s from './UserPage.module.scss'\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../App/App';\n\nexport const UserPage: React.FC = React.memo(() => {\n\n    const {email, name} = useSelector(selectorUserData)\n    const status = useSelector(selectorRequestStatus)\n    const error = useSelector(selectorAppError)\n    const isLoggedIn = useSelector(selectorIsLogged)\n\n    const logoutHandler = useCallback(() => {\n        dispatch(logout())\n    },[])\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAuthUserData())\n    }, []);\n\n    if (!isLoggedIn) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return (\n        <div className={s.wrapper}>\n            {status === 'loading'\n                ? <Preloader/>\n                : <div className={s.user_block}>\n                    <div className={s.user_info}>\n                        <div className={s.info}>{email}</div>\n                        <div className={s.info}>{name}</div>\n                    </div>\n                    {\n                        isLoggedIn && (\n                            <div className={s.logout_btn_wrapper}>\n                                <Button onClick={logoutHandler} className={s.logout_btn}>LOGOUT</Button>\n                            </div>)\n                    }\n                    {error && <Error error={error}/>}\n                </div>\n            }\n        </div>\n    );\n});\n\n","import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {LoginPage} from '../Pages/LoginPage/LoginPage';\nimport {UserPage} from '../Pages/UserPage/UserPage';\nimport {useDispatch} from 'react-redux';\nimport {getAuthUserData} from '../redux/auth-reducer';\n\nimport s from './App.module.scss'\n\nexport const PATH = {\n    LOGIN: '/login',\n    USER: '/user',\n}\n\nexport const App: React.FC = () => {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (localStorage.getItem('accessToken')) {\n            //check valid token\n            dispatch(getAuthUserData())\n        }\n    }, [])\n\n    return (\n        <div className={s.app}>\n            <div className={s.content}>\n                <Switch>\n                    <Route path=\"/\" exact render={() => <Redirect to={PATH.USER}/>}/>\n                    <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                    <Route path={PATH.USER} exact render={() => <UserPage/>}/>\n                </Switch>\n            </div>\n        </div>\n    );\n};\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer';\r\nimport {authReducer} from './auth-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    appState: appReducer,\r\n    authState: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from './App/App';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}